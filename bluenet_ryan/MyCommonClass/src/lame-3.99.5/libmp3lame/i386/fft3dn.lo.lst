     1                                  ; from a new GOGO-no-coda (1999/09)
     2                                  ;	Copyright (C) 1999 shigeo
     3                                  ;	special thanks to Keiichi SAKAI, URURI
     4                                  ; hacked and back-ported to LAME
     5                                  ;	 by Takehiro TOMINAGA Nov 2000
     6                                  
     7                                  %include "nasm.h"
     8                              <1> 
     9                              <1> ;	Copyright (C) 1999 URURI
    10                              <1> 
    11                              <1> ;	nasm�ѥޥ���
    12                              <1> ;	1999/08/21 ���
    13                              <1> ;	1999/10/10 ���Ĥ��ɲ�
    14                              <1> ;	1999/10/27 aout�б�
    15                              <1> ;	1999/11/07 pushf, popf ��NASM�ΥХ��б�
    16                              <1> ;	1999/12/02 for BCC ( Thanks to Miquel )
    17                              <1> 
    18                              <1> ; for Windows Visual C++        -> define WIN32
    19                              <1> ;             Borland or cygwin ->        WIN32 and COFF
    20                              <1> ; for FreeBSD 2.x               ->        AOUT
    21                              <1> ; for TownsOS                   ->        __tos__
    22                              <1> ; otherwise                     ->   none
    23                              <1> 
    24                              <1> ;̾����դ���
    25                              <1> 
    26                              <1> BITS 32
    27                              <1> 
    28                              <1> section .note.GNU-stack noalloc noexec nowrite progbits
    29                              <1> 
    30                              <1> %ifdef YASM
    31                              <1> 	%define segment_code segment .text align=16 use32
    32                              <1> 	%define segment_data segment .data align=16 use32
    33                              <1> 	%define segment_bss  segment .bss align=16 use32
    34                              <1> %elifdef WIN32
    35                              <1> 	%define segment_code segment .text align=16 class=CODE use32
    36                              <1> 	%define segment_data segment .data align=16 class=DATA use32
    37                              <1> %ifdef __BORLANDC__
    38                              <1> 	%define segment_bss  segment .data align=16 class=DATA use32
    39                              <1> %else
    40                              <1> 	%define segment_bss  segment .bss align=16 class=DATA use32
    41                              <1> %endif
    42                              <1> %elifdef AOUT
    43                              <1> 	%define _NAMING
    44                              <1> 	%define segment_code segment .text
    45                              <1> 	%define segment_data segment .data
    46                              <1> 	%define segment_bss  segment .bss
    47                              <1> %else
    48                              <1> %ifidn __OUTPUT_FORMAT__,elf
    49                              <1> 	section .note.GNU-stack progbits noalloc noexec nowrite align=1
    50                              <1> %endif
    51                              <1> 	%define segment_code segment .text align=16 class=CODE use32
    52                              <1> 	%define segment_data segment .data align=16 class=DATA use32
    53                              <1> 	%define segment_bss  segment .bss align=16 class=DATA use32
    54                              <1> %endif
    55                              <1> 
    56                              <1> %ifdef WIN32
    57                              <1> 	%define _NAMING
    58                              <1> %endif
    59                              <1> 
    60                              <1> %ifdef __tos__
    61                              <1> group CGROUP text
    62                              <1> group DGROUP data
    63                              <1> %endif
    64                              <1> 
    65                              <1> ;ñ�����ư��������
    66                              <1> 
    67                              <1> %idefine float dword
    68                              <1> %idefine fsize 4
    69                              <1> %idefine fsizen(a) (fsize*(a))
    70                              <1> 
    71                              <1> ;��ɷ��
    72                              <1> 
    73                              <1> %idefine wsize 2
    74                              <1> %idefine wsizen(a) (wsize*(a))
    75                              <1> %idefine dwsize 4
    76                              <1> %idefine dwsizen(a) (dwsize*(a))
    77                              <1> 
    78                              <1> ;REG
    79                              <1> 
    80                              <1> %define r0 eax
    81                              <1> %define r1 ebx
    82                              <1> %define r2 ecx
    83                              <1> %define r3 edx
    84                              <1> %define r4 esi
    85                              <1> %define r5 edi
    86                              <1> %define r6 ebp
    87                              <1> %define r7 esp
    88                              <1> 
    89                              <1> ;MMX,3DNow!,SSE
    90                              <1> 
    91                              <1> %define pmov	movq
    92                              <1> %define pmovd	movd
    93                              <1> 
    94                              <1> %define pupldq	punpckldq
    95                              <1> %define puphdq	punpckhdq
    96                              <1> %define puplwd	punpcklwd
    97                              <1> %define puphwd	punpckhwd
    98                              <1> 
    99                              <1> %define xm0 xmm0
   100                              <1> %define xm1 xmm1
   101                              <1> %define xm2 xmm2
   102                              <1> %define xm3 xmm3
   103                              <1> %define xm4 xmm4
   104                              <1> %define xm5 xmm5
   105                              <1> %define xm6 xmm6
   106                              <1> %define xm7 xmm7
   107                              <1> 
   108                              <1> ;�����åե��Ѥ�4�ʥޥ���
   109                              <1> 
   110                              <1> %define R4(a,b,c,d) (a*64+b*16+c*4+d)
   111                              <1> 
   112                              <1> ;C�饤���ʴʰץޥ���
   113                              <1> 
   114                              <1> %imacro globaldef 1
   115                              <1> 	%ifdef _NAMING
   116                              <1> 		%define %1 _%1
   117                              <1> 	%endif
   118                              <1> 	global %1
   119                              <1> %endmacro
   120                              <1> 
   121                              <1> %imacro externdef 1
   122                              <1> 	%ifdef _NAMING
   123                              <1> 		%define %1 _%1
   124                              <1> 	%endif
   125                              <1> 	extern %1
   126                              <1> %endmacro
   127                              <1> 
   128                              <1> %imacro proc 1
   129                              <1> 	%push	proc
   130                              <1> 	%ifdef _NAMING
   131                              <1> 		global _%1
   132                              <1> 	%else
   133                              <1> 		global %1
   134                              <1> 	%endif
   135                              <1> 
   136                              <1> 	align 32
   137                              <1> %1:
   138                              <1> _%1:
   139                              <1> 
   140                              <1> 	%assign %$STACK 0
   141                              <1> 	%assign %$STACKN 0
   142                              <1> 	%assign %$ARG 4
   143                              <1> %endmacro
   144                              <1> 
   145                              <1> %imacro endproc 0
   146                              <1> 	%ifnctx proc
   147                              <1> 		%error expected 'proc' before 'endproc'.
   148                              <1> 	%else
   149                              <1> 		%if %$STACK > 0
   150                              <1> 			add esp, %$STACK
   151                              <1> 		%endif
   152                              <1> 
   153                              <1> 		%if %$STACK <> (-%$STACKN)
   154                              <1> 			%error STACKLEVEL mismatch check 'local', 'alloc', 'pushd', 'popd'
   155                              <1> 		%endif
   156                              <1> 
   157                              <1> 		ret
   158                              <1> 		%pop
   159                              <1> 	%endif
   160                              <1> %endmacro
   161                              <1> 
   162                              <1> %idefine sp(a) esp+%$STACK+a
   163                              <1> 
   164                              <1> %imacro arg 1
   165                              <1> 	%00	equ %$ARG
   166                              <1> 	%assign %$ARG %$ARG+%1
   167                              <1> %endmacro
   168                              <1> 
   169                              <1> %imacro local 1
   170                              <1> 	%assign %$STACKN %$STACKN-%1
   171                              <1> 	%00 equ %$STACKN
   172                              <1> %endmacro
   173                              <1> 
   174                              <1> %imacro alloc 0
   175                              <1> 	sub esp, (-%$STACKN)-%$STACK
   176                              <1> 	%assign %$STACK (-%$STACKN)
   177                              <1> %endmacro
   178                              <1> 
   179                              <1> %imacro pushd 1-*
   180                              <1> 	%rep %0
   181                              <1> 		push %1
   182                              <1> 		%assign %$STACK %$STACK+4
   183                              <1> 	%rotate 1
   184                              <1> 	%endrep
   185                              <1> %endmacro
   186                              <1> 
   187                              <1> %imacro popd 1-*
   188                              <1> 	%rep %0
   189                              <1> 	%rotate -1
   190                              <1> 		pop %1
   191                              <1> 		%assign %$STACK %$STACK-4
   192                              <1> 	%endrep
   193                              <1> %endmacro
   194                              <1> 
   195                              <1> ; bug of NASM-0.98
   196                              <1> %define pushf db 0x66, 0x9C
   197                              <1> %define popf  db 0x66, 0x9D
   198                              <1> 
   199                              <1> %define	ge16(n)		((((n) / 16)*0xFFFFFFFF) & 0xFFFFFFFF)
   200                              <1> %define	ge15(n)		((((n) / 15)*0xFFFFFFFF) & 0xFFFFFFFF)
   201                              <1> %define	ge14(n)		((((n) / 14)*0xFFFFFFFF) & 0xFFFFFFFF)
   202                              <1> %define	ge13(n)		((((n) / 13)*0xFFFFFFFF) & 0xFFFFFFFF)
   203                              <1> %define	ge12(n)		((((n) / 12)*0xFFFFFFFF) & 0xFFFFFFFF)
   204                              <1> %define	ge11(n)		((((n) / 11)*0xFFFFFFFF) & 0xFFFFFFFF)
   205                              <1> %define	ge10(n)		((((n) / 10)*0xFFFFFFFF) & 0xFFFFFFFF)
   206                              <1> %define	ge9(n)		((((n) /  9)*0xFFFFFFFF) & 0xFFFFFFFF)
   207                              <1> %define	ge8(n)		(ge9(n) | ((((n) /  8)*0xFFFFFFFF) & 0xFFFFFFFF))
   208                              <1> %define	ge7(n)		(ge9(n) | ((((n) /  7)*0xFFFFFFFF) & 0xFFFFFFFF))
   209                              <1> %define	ge6(n)		(ge9(n) | ((((n) /  6)*0xFFFFFFFF) & 0xFFFFFFFF))
   210                              <1> %define	ge5(n)		(ge9(n) | ((((n) /  5)*0xFFFFFFFF) & 0xFFFFFFFF))
   211                              <1> %define	ge4(n)		(ge5(n) | ((((n) /  4)*0xFFFFFFFF) & 0xFFFFFFFF))
   212                              <1> %define	ge3(n)		(ge5(n) | ((((n) /  3)*0xFFFFFFFF) & 0xFFFFFFFF))
   213                              <1> %define	ge2(n)		(ge3(n) | ((((n) /  2)*0xFFFFFFFF) & 0xFFFFFFFF))
   214                              <1> %define	ge1(n)		(ge2(n) | ((((n) /  1)*0xFFFFFFFF) & 0xFFFFFFFF))
   215                              <1> 
   216                              <1> ; macro to align for begining of loop
   217                              <1> ; %1   does not align if it LE bytes to next alignment 
   218                              <1> ;      4..16 
   219                              <1> ;      default is 12
   220                              <1> 
   221                              <1> %imacro	loopalignK6	0-1 12 
   222                              <1> %%here:
   223                              <1> 	times (($$-%%here) & 15 & ge1(($$-%%here) & 15) & ~ge4(($$-%%here) & 15)) nop
   224                              <1> 	times (1                & ge4(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) jmp short %%skip
   225                              <1> 	times (((($$-%%here) & 15)-2) & ge4(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) nop
   226                              <1> %%skip:
   227                              <1> %endmacro
   228                              <1> 
   229                              <1> %imacro	loopalignK7	0-1 12 
   230                              <1> %%here:
   231                              <1> 	times (1 & ge1(($$-%%here) & 15)  & ~ge2(($$-%%here) & 15)  & ~ge%1(($$-%%here) & 15)) nop
   232                              <1> 	times (1 & ge2(($$-%%here) & 15)  & ~ge3(($$-%%here) & 15)  & ~ge%1(($$-%%here) & 15)) DB 08Bh,0C0h
   233                              <1> 	times (1 & ge3(($$-%%here) & 15)  & ~ge4(($$-%%here) & 15)  & ~ge%1(($$-%%here) & 15)) DB 08Dh,004h,020h
   234                              <1> 	times (1 & ge4(($$-%%here) & 15)  & ~ge5(($$-%%here) & 15)  & ~ge%1(($$-%%here) & 15)) DB 08Dh,044h,020h,000h
   235                              <1> 	times (1 & ge5(($$-%%here) & 15)  & ~ge6(($$-%%here) & 15)  & ~ge%1(($$-%%here) & 15)) DB 08Dh,044h,020h,000h,090h
   236                              <1> 	times (1 & ge6(($$-%%here) & 15)  & ~ge7(($$-%%here) & 15)  & ~ge%1(($$-%%here) & 15)) DB 08Dh,080h,0,0,0,0
   237                              <1> 	times (1 & ge7(($$-%%here) & 15)  & ~ge8(($$-%%here) & 15)  & ~ge%1(($$-%%here) & 15)) DB 08Dh,004h,005h,0,0,0,0
   238                              <1> 	times (1 & ge8(($$-%%here) & 15)  & ~ge9(($$-%%here) & 15)  & ~ge%1(($$-%%here) & 15)) DB 08Dh,004h,005h,0,0,0,0,90h
   239                              <1> 	times (1 & ge9(($$-%%here) & 15)  & ~ge10(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,007h,90h,90h,90h,90h,90h,90h,90h
   240                              <1> 	times (1 & ge10(($$-%%here) & 15) & ~ge11(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,008h,90h,90h,90h,90h,90h,90h,90h,90h
   241                              <1> 	times (1 & ge11(($$-%%here) & 15) & ~ge12(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,009h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   242                              <1> 	times (1 & ge12(($$-%%here) & 15) & ~ge13(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Ah,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   243                              <1> 	times (1 & ge13(($$-%%here) & 15) & ~ge14(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Bh,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   244                              <1> 	times (1 & ge14(($$-%%here) & 15) & ~ge15(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Ch,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   245                              <1> 	times (1 & ge15(($$-%%here) & 15) & ~ge16(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Dh,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   246                              <1> %%skip:
   247                              <1> %endmacro
   248                              <1> 
   249                              <1> %imacro	loopalign	0-1 12 
   250                              <1> 	loopalignK7 %1
   251                              <1> %endmacro
   252                              <1> %define PACK(x,y,z,w)	(x*64+y*16+z*4+w)
   253                              <1> 
   254                              <1> %ifidn __OUTPUT_FORMAT__,elf
   255                              <1> 
   256                              <1> %idefine PIC_BASE(A) _GLOBAL_OFFSET_TABLE_ + $$ - $ wrt ..gotpc
   257                              <1> %idefine PIC_EBP_REL(A) ebp + A wrt ..gotoff
   258                              <1> %macro PIC_OFFSETTABLE 0
   259                              <1> extern  _GLOBAL_OFFSET_TABLE_
   260                              <1> get_pc.bp:
   261                              <1> 	mov ebp, [esp]
   262                              <1> 	retn
   263                              <1> %endmacro
   264                              <1> 
   265                              <1> %else
   266                              <1> 
   267                              <1> %define PIC_BASE(A) (0)
   268                              <1> %define PIC_EBP_REL(A) (A)
   269                              <1> %macro PIC_OFFSETTABLE 0
   270                              <1> get_pc.bp:
   271                              <1> 	mov ebp, [esp]
   272                              <1> 	retn
   273                              <1> %endmacro
   274                              <1> 
   275                              <1> %endif
   276                                  
   277                                  	globaldef fht_3DN
   278                              <1>  %ifdef _NAMING
   279                              <1>  %define %1 _%1
   280                              <1>  %endif
   281                              <1>  global %1
   282                                  
   283                                  	segment_data
   284                                  	align	16
   285 00000000 0000008000000000        costab	dd	0x80000000, 0
   286 00000008 F304B53FF304B53F        	dd	1.414213562,1.414213562
   287 00000010 5E836C3F5E836C3F        	dd	9.238795283293805e-01, 9.238795283293805e-01
   288 00000018 16EFC33E16EFC33E        	dd	3.826834424611044e-01, 3.826834424611044e-01
   289 00000020 6DC47E3F6DC47E3F        	dd	9.951847264044178e-01, 9.951847264044178e-01
   290 00000028 36BDC83D36BDC83D        	dd	9.801714304836734e-02, 9.801714304836734e-02
   291 00000030 43EC7F3F43EC7F3F        	dd	9.996988186794428e-01, 9.996988186794428e-01
   292 00000038 B00AC93CB00AC93C        	dd	2.454122920569705e-02, 2.454122920569705e-02
   293 00000040 C4FE7F3FC4FE7F3F        	dd	9.999811752815535e-01, 9.999811752815535e-01
   294 00000048 880FC93B880FC93B        	dd	6.135884819898878e-03, 6.135884819898878e-03
   295 00000050 000000000000803F        D_1_0_0_0	dd	0.0		, 1.0
   296                                  
   297                                  	segment_code
   298                                  
   299                                  PIC_OFFSETTABLE
   300                              <1> extern _GLOBAL_OFFSET_TABLE_
   301                              <1> get_pc.bp:
   302 00000000 8B2C24              <1>  mov ebp, [esp]
   303 00000003 C3                  <1>  retn
   304                                  
   305                                  
   306                                  ;void fht_3DN(float *fz, int nn);
   307                                  
   308                                  proc	fht_3DN
   309                              <1>  %push proc
   310                              <1>  %ifdef _NAMING
   311                              <1>  global _%1
   312                              <1>  %else
   313                              <1>  global %1
   314                              <1>  %endif
   315                              <1> 
   316 00000004 90<rept>            <1>  align 32
   317                              <1> %1:
   318                              <1> _%1:
   319                              <1> 
   320                              <1>  %assign %$STACK 0
   321                              <1>  %assign %$STACKN 0
   322                              <1>  %assign %$ARG 4
   323                                  
   324                                  	pushd	ebp, ebx, esi, edi
   325                              <1>  %rep %0
   326                              <1>  push %1
   327                              <1>  %assign %$STACK %$STACK+4
   328                              <1>  %rotate 1
   329                              <1>  %endrep
   330 00000020 55                  <2>  push %1
   331                              <2>  %assign %$STACK %$STACK+4
   332                              <2>  %rotate 1
   333 00000021 53                  <2>  push %1
   334                              <2>  %assign %$STACK %$STACK+4
   335                              <2>  %rotate 1
   336 00000022 56                  <2>  push %1
   337                              <2>  %assign %$STACK %$STACK+4
   338                              <2>  %rotate 1
   339 00000023 57                  <2>  push %1
   340                              <2>  %assign %$STACK %$STACK+4
   341                              <2>  %rotate 1
   342                                  
   343 00000024 81EC14000000            	sub	esp, 20
   344                                  
   345 0000002A E8D1FFFFFF              	call	get_pc.bp
   346 0000002F 81C5[D1FFFFFF]          	add	ebp, PIC_BASE()
   347                                  
   348 00000035 8B442428                	mov	r0, [esp+40]		;fi
   349 00000039 8B5C242C                	mov	r1, [esp+44]		;r1 = nn
   350 0000003D 8D95[00000000]          	lea	r3, [PIC_EBP_REL(costab)]		;tri = costab
   351 00000043 8D34D8                  	lea	r4, [r0+r1*8]		;r4 = fn = &fz[n]
   352 00000046 89742410                	mov	[esp+16], r4
   353 0000004A BE08000000              	mov	r4, 8			;kx = k1/2
   354                                  
   355 0000004F 0F6F3A                  	pmov	mm7, [r3]
   356                                  
   357                                  	loopalign 16
   358                              <1>  loopalignK7 %1
   359                              <2> %%here:
   360                              <2>  times (1 & ge1(($$-%%here) & 15) & ~ge2(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) nop
   361                              <2>  times (1 & ge2(($$-%%here) & 15) & ~ge3(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Bh,0C0h
   362                              <2>  times (1 & ge3(($$-%%here) & 15) & ~ge4(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,004h,020h
   363                              <2>  times (1 & ge4(($$-%%here) & 15) & ~ge5(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,044h,020h,000h
   364                              <2>  times (1 & ge5(($$-%%here) & 15) & ~ge6(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,044h,020h,000h,090h
   365                              <2>  times (1 & ge6(($$-%%here) & 15) & ~ge7(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,080h,0,0,0,0
   366                              <2>  times (1 & ge7(($$-%%here) & 15) & ~ge8(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,004h,005h,0,0,0,0
   367                              <2>  times (1 & ge8(($$-%%here) & 15) & ~ge9(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,004h,005h,0,0,0,0,90h
   368                              <2>  times (1 & ge9(($$-%%here) & 15) & ~ge10(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,007h,90h,90h,90h,90h,90h,90h,90h
   369                              <2>  times (1 & ge10(($$-%%here) & 15) & ~ge11(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,008h,90h,90h,90h,90h,90h,90h,90h,90h
   370                              <2>  times (1 & ge11(($$-%%here) & 15) & ~ge12(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,009h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   371                              <2>  times (1 & ge12(($$-%%here) & 15) & ~ge13(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Ah,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   372                              <2>  times (1 & ge13(($$-%%here) & 15) & ~ge14(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Bh,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   373 00000052 EB0C90909090909090- <2>  times (1 & ge14(($$-%%here) & 15) & ~ge15(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Ch,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   374 0000005B 9090909090          <2>
   375                              <2>  times (1 & ge15(($$-%%here) & 15) & ~ge16(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Dh,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   376                              <2> %%skip:
   377                                  .do1
   378 00000060 8D5210                  	lea	r3, [r3+16]	;tri += 2;
   379 00000063 0F6FB5[08000000]        	pmov	mm6, [PIC_EBP_REL(costab+8)]
   380 0000006A 8D0C76                  	lea	r2, [r4+r4*2]		;k3*fsize/2
   381 0000006D BF04000000              	mov	r5, 4		;i = 1*fsize
   382                                  
   383                                  	loopalign 16
   384                              <1>  loopalignK7 %1
   385                              <2> %%here:
   386                              <2>  times (1 & ge1(($$-%%here) & 15) & ~ge2(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) nop
   387                              <2>  times (1 & ge2(($$-%%here) & 15) & ~ge3(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Bh,0C0h
   388                              <2>  times (1 & ge3(($$-%%here) & 15) & ~ge4(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,004h,020h
   389                              <2>  times (1 & ge4(($$-%%here) & 15) & ~ge5(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,044h,020h,000h
   390                              <2>  times (1 & ge5(($$-%%here) & 15) & ~ge6(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,044h,020h,000h,090h
   391                              <2>  times (1 & ge6(($$-%%here) & 15) & ~ge7(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,080h,0,0,0,0
   392                              <2>  times (1 & ge7(($$-%%here) & 15) & ~ge8(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,004h,005h,0,0,0,0
   393                              <2>  times (1 & ge8(($$-%%here) & 15) & ~ge9(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,004h,005h,0,0,0,0,90h
   394                              <2>  times (1 & ge9(($$-%%here) & 15) & ~ge10(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,007h,90h,90h,90h,90h,90h,90h,90h
   395                              <2>  times (1 & ge10(($$-%%here) & 15) & ~ge11(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,008h,90h,90h,90h,90h,90h,90h,90h,90h
   396                              <2>  times (1 & ge11(($$-%%here) & 15) & ~ge12(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,009h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   397                              <2>  times (1 & ge12(($$-%%here) & 15) & ~ge13(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Ah,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   398                              <2>  times (1 & ge13(($$-%%here) & 15) & ~ge14(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Bh,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   399 00000072 EB0C90909090909090- <2>  times (1 & ge14(($$-%%here) & 15) & ~ge15(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Ch,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   400 0000007B 9090909090          <2>
   401                              <2>  times (1 & ge15(($$-%%here) & 15) & ~ge16(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Dh,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   402                              <2> %%skip:
   403                                  .do2:
   404 00000080 8D1C30                  	lea	r1, [r0+r4]		;gi = fi + kx
   405                                  	;f
   406 00000083 0F6F00                  	pmov	mm0, [r0]	;fi0
   407 00000086 0F6F0C70                	pmov	mm1, [r0+r4*2]	;fi1
   408 0000008A 0F6F1448                	pmov	mm2, [r0+r2*2]	;fi3
   409 0000008E 0F6F1CB0                	pmov	mm3, [r0+r4*4]	;fi2
   410                                  
   411 00000092 0F62C0                  	pupldq	mm0, mm0	;fi0 | fi0
   412 00000095 0F62C9                  	pupldq	mm1, mm1	;fi1 | fi1
   413 00000098 0F62D2                  	pupldq	mm2, mm2	;fi2 | fi2
   414 0000009B 0F62DB                  	pupldq	mm3, mm3	;fi3 | fi3
   415                                  
   416 0000009E 0FEFCF                  	pxor	mm1, mm7	;fi1 | -fi1
   417 000000A1 0FEFDF                  	pxor	mm3, mm7	;fi3 | -fi3
   418                                  
   419 000000A4 0F0FC19A                	pfsub	mm0, mm1	;f1 | f0
   420 000000A8 0F0FD39A                	pfsub	mm2, mm3	;f3 | f2
   421                                  
   422 000000AC 0F6FE0                  	pmov	mm4, mm0
   423 000000AF 0F0FC29E                	pfadd	mm0, mm2	;f1+f3|f0+f2 = fi1 | fi0
   424 000000B3 0F0FE29A                	pfsub	mm4, mm2	;f1-f3|f0-f2 = fi3 | fi2
   425                                  
   426 000000B7 0F7E00                  	pmovd	[r0], mm0	;fi[0]
   427 000000BA 0F6AC0                  	puphdq	mm0, mm0
   428 000000BD 0F7E24B0                	pmovd	[r0+r4*4], mm4	;fi[k2]
   429 000000C1 0F6AE4                  	puphdq	mm4, mm4
   430                                  
   431 000000C4 0F7E2470                	pmovd	[r0+r4*2], mm4	;fi[k1]
   432 000000C8 0F7E0448                	pmovd	[r0+r2*2], mm0	;fi[k3]
   433 000000CC 8D04F0                  	lea	r0, [r0+r4*8]
   434                                  
   435                                  	;g
   436 000000CF 0F6F03                  	pmov	mm0, [r1]	;gi0
   437 000000D2 0F6F0C73                	pmov	mm1, [r1+r4*2]	;gi1
   438 000000D6 0F6F14B3                	pmov	mm2, [r1+r4*4]	;gi2
   439 000000DA 0F6F1C4B                	pmov	mm3, [r1+r2*2]	;gi3
   440                                  
   441 000000DE 0F62C9                  	pupldq	mm1, mm1
   442 000000E1 0F62C0                  	pupldq	mm0, mm0	;gi0 | gi0
   443 000000E4 0F62D3                  	pupldq	mm2, mm3	;gi3 | gi2
   444                                  
   445 000000E7 0FEFCF                  	pxor	mm1, mm7	;gi1 | -gi1
   446                                  
   447 000000EA 0F0FC19A                	pfsub	mm0, mm1	;gi0-gi1|gi0+gi1 = g1 | g0
   448 000000EE 0F0FD6B4                	pfmul	mm2, mm6	;gi3*SQRT2|gi2*SQRT2 = g3 | g2
   449                                  
   450 000000F2 0F6FE0                  	pmov	mm4, mm0
   451 000000F5 0F0FC29E                	pfadd	mm0, mm2	;g1+g3|g0+g2 = gi1 | gi0
   452 000000F9 0F0FE29A                	pfsub	mm4, mm2	;g1-g3|g0-g2 = gi3 | gi2
   453                                  
   454 000000FD 0F7E03                  	pmovd	[r1], mm0	;gi[0]
   455 00000100 0F6AC0                  	puphdq	mm0, mm0
   456 00000103 0F7E24B3                	pmovd	[r1+r4*4], mm4	;gi[k2]
   457 00000107 0F6AE4                  	puphdq	mm4, mm4
   458                                  
   459 0000010A 3B442410                	cmp	r0, [esp + 16]
   460 0000010E 0F7E0473                	pmovd	[r1+r4*2], mm0	;gi[k1]
   461 00000112 0F7E244B                	pmovd	[r1+r2*2], mm4	;gi[k3]
   462                                  
   463 00000116 0F8264FFFFFF            	jb near .do2
   464                                  
   465 0000011C 0F6F343A                	pmov	mm6, [r3+r5]	; this is not aligned address!!
   466                                  
   467                                  	loopalign 16
   468                              <1>  loopalignK7 %1
   469                              <2> %%here:
   470                              <2>  times (1 & ge1(($$-%%here) & 15) & ~ge2(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) nop
   471                              <2>  times (1 & ge2(($$-%%here) & 15) & ~ge3(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Bh,0C0h
   472                              <2>  times (1 & ge3(($$-%%here) & 15) & ~ge4(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,004h,020h
   473                              <2>  times (1 & ge4(($$-%%here) & 15) & ~ge5(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,044h,020h,000h
   474                              <2>  times (1 & ge5(($$-%%here) & 15) & ~ge6(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,044h,020h,000h,090h
   475                              <2>  times (1 & ge6(($$-%%here) & 15) & ~ge7(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,080h,0,0,0,0
   476                              <2>  times (1 & ge7(($$-%%here) & 15) & ~ge8(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,004h,005h,0,0,0,0
   477                              <2>  times (1 & ge8(($$-%%here) & 15) & ~ge9(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,004h,005h,0,0,0,0,90h
   478                              <2>  times (1 & ge9(($$-%%here) & 15) & ~ge10(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,007h,90h,90h,90h,90h,90h,90h,90h
   479                              <2>  times (1 & ge10(($$-%%here) & 15) & ~ge11(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,008h,90h,90h,90h,90h,90h,90h,90h,90h
   480                              <2>  times (1 & ge11(($$-%%here) & 15) & ~ge12(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,009h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   481                              <2>  times (1 & ge12(($$-%%here) & 15) & ~ge13(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Ah,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   482                              <2>  times (1 & ge13(($$-%%here) & 15) & ~ge14(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Bh,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   483                              <2>  times (1 & ge14(($$-%%here) & 15) & ~ge15(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Ch,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   484                              <2>  times (1 & ge15(($$-%%here) & 15) & ~ge16(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Dh,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   485                              <2> %%skip:
   486                                  .for:
   487                                  ;
   488                                  ; mm6 = c1 | s1
   489                                  ; mm7 = 0x800000000 | 0
   490                                  ;
   491 00000120 0F6FCE                  	pmov	mm1, mm6
   492 00000123 8B442428                	mov	r0, [esp+40]	; fz
   493 00000127 0F6AC9                  	puphdq	mm1, mm1	; c1 | c1
   494 0000012A 8D1C70                  	lea	r1, [r0+r4*2]
   495 0000012D 0F0FC99E                	pfadd	mm1, mm1	; c1+c1 | c1+c1
   496 00000131 0F0FCEB4                	pfmul	mm1, mm6	; 2*c1*c1 | 2*c1*s1
   497 00000135 0F0F8D[50000000]9A      	pfsub	mm1, [PIC_EBP_REL(D_1_0_0_0)] ; 2*c1*c1-1.0 | 2*c1*s1 = -c2 | s2
   498                                  
   499 0000013D 0F6FC1                  	pmov	mm0, mm1
   500 00000140 0FEFFE                  	pxor	mm7, mm6	; c1 | -s1
   501                                  
   502 00000143 0F62D0                  	pupldq	mm2, mm0
   503 00000146 0F62DE                  	pupldq	mm3, mm6	; ** | c1
   504 00000149 0F6AC2                  	puphdq	mm0, mm2	; s2 | c2
   505 0000014C 0F6AF3                  	puphdq	mm6, mm3	;-s1 | c1
   506                                  
   507 0000014F 0FEF85[00000000]        	pxor	mm0, [PIC_EBP_REL(costab)]	; c2 | -s2
   508                                  
   509                                  ; mm0 =  s2| c2
   510                                  ; mm1 = -c2| s2
   511                                  ; mm6 =  c1| s1
   512                                  ; mm7 =  s1|-c1 (we use the opposite sign. from GOGO here)
   513                                  
   514 00000156 0F7F0424                	pmov	[esp], mm0
   515 0000015A 0F7F4C2408              	pmov	[esp+8], mm1
   516                                  
   517 0000015F 29FB                    	sub	r1, r5		;r1 = gi
   518 00000161 01F8                    	add	r0, r5		;r0 = fi
   519                                  
   520                                  	loopalign 16
   521                              <1>  loopalignK7 %1
   522                              <2> %%here:
   523                              <2>  times (1 & ge1(($$-%%here) & 15) & ~ge2(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) nop
   524                              <2>  times (1 & ge2(($$-%%here) & 15) & ~ge3(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Bh,0C0h
   525                              <2>  times (1 & ge3(($$-%%here) & 15) & ~ge4(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,004h,020h
   526                              <2>  times (1 & ge4(($$-%%here) & 15) & ~ge5(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,044h,020h,000h
   527                              <2>  times (1 & ge5(($$-%%here) & 15) & ~ge6(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,044h,020h,000h,090h
   528                              <2>  times (1 & ge6(($$-%%here) & 15) & ~ge7(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,080h,0,0,0,0
   529                              <2>  times (1 & ge7(($$-%%here) & 15) & ~ge8(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,004h,005h,0,0,0,0
   530                              <2>  times (1 & ge8(($$-%%here) & 15) & ~ge9(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,004h,005h,0,0,0,0,90h
   531                              <2>  times (1 & ge9(($$-%%here) & 15) & ~ge10(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,007h,90h,90h,90h,90h,90h,90h,90h
   532                              <2>  times (1 & ge10(($$-%%here) & 15) & ~ge11(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,008h,90h,90h,90h,90h,90h,90h,90h,90h
   533                              <2>  times (1 & ge11(($$-%%here) & 15) & ~ge12(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,009h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   534                              <2>  times (1 & ge12(($$-%%here) & 15) & ~ge13(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Ah,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   535 00000163 EB0B90909090909090- <2>  times (1 & ge13(($$-%%here) & 15) & ~ge14(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Bh,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   536 0000016C 90909090            <2>
   537                              <2>  times (1 & ge14(($$-%%here) & 15) & ~ge15(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Ch,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   538                              <2>  times (1 & ge15(($$-%%here) & 15) & ~ge16(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Dh,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   539                              <2> %%skip:
   540                                  .do3:
   541 00000170 0F6F1470                	pmov	mm2, [r0+r4*2] ; fi[k1]
   542 00000174 0F6F2473                	pmov	mm4, [r1+r4*2] ; gi[k1]
   543 00000178 0F6F1C48                	pmov	mm3, [r0+r2*2] ; fi[k3]
   544 0000017C 0F6F2C4B                	pmov	mm5, [r1+r2*2] ; gi[k3]
   545                                  
   546 00000180 0F62D2                  	pupldq	mm2, mm2	; fi1 | fi1
   547 00000183 0F62E4                  	pupldq	mm4, mm4	; gi1 | gi1
   548 00000186 0F62DB                  	pupldq	mm3, mm3	; fi3 | fi3
   549 00000189 0F62ED                  	pupldq	mm5, mm5	; gi3 | gi3
   550                                  
   551 0000018C 0F0FD0B4                	pfmul	mm2, mm0	; s2 * fi1 | c2 * fi1
   552 00000190 0F0FE1B4                	pfmul	mm4, mm1	;-c2 * gi1 | s2 * gi1
   553 00000194 0F0FD8B4                	pfmul	mm3, mm0	; s2 * fi3 | c2 * fi3
   554 00000198 0F0FE9B4                	pfmul	mm5, mm1	;-c2 * gi3 | s2 * gi3
   555                                  
   556 0000019C 0F0FD49E                	pfadd	mm2, mm4		;b | a
   557 000001A0 0F0FDD9E                	pfadd	mm3, mm5		;d | c
   558                                  
   559 000001A4 0F6F00                  	pmov	mm0, [r0]
   560 000001A7 0F6F23                  	pmov	mm4, [r1]
   561 000001AA 0F6F0CB0                	pmov	mm1, [r0+r4*4]
   562 000001AE 0F6F2CB3                	pmov	mm5, [r1+r4*4]
   563                                  
   564 000001B2 0F62C4                  	pupldq	mm0, mm4		;gi0 | fi0
   565 000001B5 0F62CD                  	pupldq	mm1, mm5		;gi2 | fi2
   566                                  
   567 000001B8 0F6FE2                  	pmov	mm4, mm2
   568 000001BB 0F6FEB                  	pmov	mm5, mm3
   569                                  
   570 000001BE 0F0FD09E                	pfadd	mm2, mm0		;g0 | f0
   571 000001C2 0F0FD99E                	pfadd	mm3, mm1		;g2 | f2
   572                                  
   573 000001C6 0F0FC49A                	pfsub	mm0, mm4		;g1 | f1
   574 000001CA 0F0FCD9A                	pfsub	mm1, mm5		;g3 | f3
   575                                  
   576 000001CE 0F6FE3                  	pmov	mm4, mm3
   577 000001D1 0F6FE9                  	pmov	mm5, mm1
   578                                  
   579 000001D4 0F62E4                  	pupldq	mm4, mm4		;f2 | f2
   580 000001D7 0F6AED                  	puphdq	mm5, mm5		;g3 | g3
   581 000001DA 0F6ADB                  	puphdq	mm3, mm3		;g2 | g2
   582 000001DD 0F62C9                  	pupldq	mm1, mm1		;f3 | f3
   583                                  
   584 000001E0 0F0FE6B4                	pfmul	mm4, mm6		;f2 * c1 | f2 * s1
   585 000001E4 0F0FEFB4                	pfmul	mm5, mm7		;g3 * s1 | g3 *-c1
   586 000001E8 0F0FDEB4                	pfmul	mm3, mm6		;g2 * c1 | g2 * s1
   587 000001EC 0F0FCFB4                	pfmul	mm1, mm7		;f3 * s1 | f3 *-c1
   588                                  
   589 000001F0 0F0FE59E                	pfadd	mm4, mm5		;a | b
   590 000001F4 0F0FD99A                	pfsub	mm3, mm1		;d | c
   591                                  
   592 000001F8 0F6FEA                  	pmov	mm5, mm2
   593 000001FB 0F6FC8                  	pmov	mm1, mm0
   594                                  
   595 000001FE 0F62D2                  	pupldq	mm2, mm2		;f0 | f0
   596 00000201 0F62C0                  	pupldq	mm0, mm0		;f1 | f1
   597                                  
   598 00000204 0F6ACA                  	puphdq	mm1, mm2		;f0 | g1
   599 00000207 0F6AE8                  	puphdq	mm5, mm0		;f1 | g0
   600                                  
   601 0000020A 0F6FD4                  	pmov	mm2, mm4
   602 0000020D 0F6FC3                  	pmov	mm0, mm3
   603                                  
   604 00000210 0F0FE19E                	pfadd	mm4, mm1		;fi0 | gi1
   605 00000214 0F0FDD9E                	pfadd	mm3, mm5		;fi1 | gi0
   606 00000218 0F0FCA9A                	pfsub	mm1, mm2		;fi2 | gi3
   607 0000021C 0F0FE89A                	pfsub	mm5, mm0		;fi3 | gi2
   608                                  
   609 00000220 0F7E2473                	pmovd	[r1+r4*2], mm4	;gi[k1]
   610 00000224 0F6AE4                  	puphdq	mm4, mm4
   611 00000227 0F7E1B                  	pmovd	[r1], mm3		;gi[0]
   612 0000022A 0F6ADB                  	puphdq	mm3, mm3
   613 0000022D 0F7E0C4B                	pmovd	[r1+r2*2], mm1	;gi[k3]
   614 00000231 0F6AC9                  	puphdq	mm1, mm1
   615 00000234 0F7E2CB3                	pmovd	[r1+r4*4], mm5	;gi[k2]
   616 00000238 0F6AED                  	puphdq	mm5, mm5
   617                                  
   618 0000023B 0F7E20                  	pmovd	[r0], mm4	;fi[0]
   619 0000023E 0F7E1C70                	pmovd	[r0+r4*2], mm3	;fi[k1]
   620 00000242 0F7E0CB0                	pmovd	[r0+r4*4], mm1	;fi[k2]
   621 00000246 0F7E2C48                	pmovd	[r0+r2*2], mm5	;fi[k3]
   622                                  
   623 0000024A 8D04F0                  	lea	r0, [r0+r4*8]
   624 0000024D 8D1CF3                  	lea	r1, [r1+r4*8]
   625 00000250 3B442410                	cmp	r0, [esp + 16]
   626 00000254 0F6F0424                	pmov	mm0, [esp]
   627 00000258 0F6F4C2408              	pmov	mm1, [esp+8]
   628                                  
   629 0000025D 0F820DFFFFFF            	jb near	.do3
   630                                  
   631 00000263 81C704000000            	add	r5, 4
   632                                  ; mm6 =  c1| s1
   633                                  ; mm7 =  s1|-c1 (we use the opposite sign. from GOGO here)
   634 00000269 0F0F32B4                	pfmul	mm6, [r3]	; c1*a | s1*a
   635 0000026D 0F0F7A08B4              	pfmul	mm7, [r3+8]	; s1*b |-c1*b
   636 00000272 39F7                    	cmp	r5, r4
   637                                  
   638 00000274 0F0FF79A                	pfsub	mm6, mm7	; c1*a-s1*b | s1*a+c1*b
   639 00000278 0F62FE                  	pupldq	mm7,mm6
   640 0000027B 0F6AF7                  	puphdq	mm6,mm7
   641 0000027E 0F6FBD[00000000]        	pmov	mm7, [PIC_EBP_REL(costab)]
   642 00000285 0F8295FEFFFF            	jb near	.for
   643                                  
   644 0000028B 8B442428                	mov	r0, [esp+40]	;fi
   645 0000028F 3B74242C                	cmp	r4, [esp+40+4]
   646 00000293 8D34B500000000          	lea	r4, [r4*4]	;kx *= 4
   647                                  
   648 0000029A 0F82C0FDFFFF            	jb near	.do1
   649                                  .exitttt
   650 000002A0 0F0E                    	femms
   651 000002A2 81C414000000            	add	esp,20
   652                                  	popd	ebp, ebx, esi, edi
   653                              <1>  %rep %0
   654                              <1>  %rotate -1
   655                              <1>  pop %1
   656                              <1>  %assign %$STACK %$STACK-4
   657                              <1>  %endrep
   658                              <2>  %rotate -1
   659 000002A8 5F                  <2>  pop %1
   660                              <2>  %assign %$STACK %$STACK-4
   661                              <2>  %rotate -1
   662 000002A9 5E                  <2>  pop %1
   663                              <2>  %assign %$STACK %$STACK-4
   664                              <2>  %rotate -1
   665 000002AA 5B                  <2>  pop %1
   666                              <2>  %assign %$STACK %$STACK-4
   667                              <2>  %rotate -1
   668 000002AB 5D                  <2>  pop %1
   669                              <2>  %assign %$STACK %$STACK-4
   670                                  endproc
   671                              <1>  %ifnctx proc
   672                              <1>  %error expected 'proc' before 'endproc'.
   673                              <1>  %else
   674                              <1>  %if %$STACK > 0
   675                              <1>  add esp, %$STACK
   676                              <1>  %endif
   677                              <1> 
   678                              <1>  %if %$STACK <> (-%$STACKN)
   679                              <1>  %error STACKLEVEL mismatch check 'local', 'alloc', 'pushd', 'popd'
   680                              <1>  %endif
   681                              <1> 
   682 000002AC C3                  <1>  ret
   683                              <1>  %pop
   684                              <1>  %endif
   685                                  
   686                                  
   687                                  ;void fht_E3DN(float *fz, int nn);
   688                                  
   689                                  proc	fht_E3DN
   690                              <1>  %push proc
   691                              <1>  %ifdef _NAMING
   692                              <1>  global _%1
   693                              <1>  %else
   694                              <1>  global %1
   695                              <1>  %endif
   696                              <1> 
   697 000002AD 90<rept>            <1>  align 32
   698                              <1> %1:
   699                              <1> _%1:
   700                              <1> 
   701                              <1>  %assign %$STACK 0
   702                              <1>  %assign %$STACKN 0
   703                              <1>  %assign %$ARG 4
   704                                  
   705                                  	pushd	ebp, ebx, esi, edi
   706                              <1>  %rep %0
   707                              <1>  push %1
   708                              <1>  %assign %$STACK %$STACK+4
   709                              <1>  %rotate 1
   710                              <1>  %endrep
   711 000002C0 55                  <2>  push %1
   712                              <2>  %assign %$STACK %$STACK+4
   713                              <2>  %rotate 1
   714 000002C1 53                  <2>  push %1
   715                              <2>  %assign %$STACK %$STACK+4
   716                              <2>  %rotate 1
   717 000002C2 56                  <2>  push %1
   718                              <2>  %assign %$STACK %$STACK+4
   719                              <2>  %rotate 1
   720 000002C3 57                  <2>  push %1
   721                              <2>  %assign %$STACK %$STACK+4
   722                              <2>  %rotate 1
   723                                  
   724 000002C4 81EC14000000            	sub	esp, 20
   725                                  
   726 000002CA E831FDFFFF              	call	get_pc.bp
   727 000002CF 81C5[31FDFFFF]          	add	ebp, PIC_BASE()
   728                                  
   729 000002D5 8B442428                	mov	r0, [esp+40]		;fi
   730 000002D9 8B5C242C                	mov	r1, [esp+44]		;r1 = nn
   731 000002DD 8D95[00000000]          	lea	r3, [PIC_EBP_REL(costab)]		;tri = costab
   732 000002E3 8D34D8                  	lea	r4, [r0+r1*8]		;r4 = fn = &fz[n]
   733 000002E6 89742410                	mov	[esp+16], r4
   734 000002EA BE08000000              	mov	r4, 8			;kx = k1/2
   735                                  
   736 000002EF 0F6F3A                  	pmov	mm7, [r3]
   737                                  
   738                                  	loopalign 16
   739                              <1>  loopalignK7 %1
   740                              <2> %%here:
   741                              <2>  times (1 & ge1(($$-%%here) & 15) & ~ge2(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) nop
   742                              <2>  times (1 & ge2(($$-%%here) & 15) & ~ge3(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Bh,0C0h
   743                              <2>  times (1 & ge3(($$-%%here) & 15) & ~ge4(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,004h,020h
   744                              <2>  times (1 & ge4(($$-%%here) & 15) & ~ge5(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,044h,020h,000h
   745                              <2>  times (1 & ge5(($$-%%here) & 15) & ~ge6(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,044h,020h,000h,090h
   746                              <2>  times (1 & ge6(($$-%%here) & 15) & ~ge7(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,080h,0,0,0,0
   747                              <2>  times (1 & ge7(($$-%%here) & 15) & ~ge8(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,004h,005h,0,0,0,0
   748                              <2>  times (1 & ge8(($$-%%here) & 15) & ~ge9(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,004h,005h,0,0,0,0,90h
   749                              <2>  times (1 & ge9(($$-%%here) & 15) & ~ge10(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,007h,90h,90h,90h,90h,90h,90h,90h
   750                              <2>  times (1 & ge10(($$-%%here) & 15) & ~ge11(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,008h,90h,90h,90h,90h,90h,90h,90h,90h
   751                              <2>  times (1 & ge11(($$-%%here) & 15) & ~ge12(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,009h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   752                              <2>  times (1 & ge12(($$-%%here) & 15) & ~ge13(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Ah,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   753                              <2>  times (1 & ge13(($$-%%here) & 15) & ~ge14(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Bh,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   754 000002F2 EB0C90909090909090- <2>  times (1 & ge14(($$-%%here) & 15) & ~ge15(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Ch,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   755 000002FB 9090909090          <2>
   756                              <2>  times (1 & ge15(($$-%%here) & 15) & ~ge16(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Dh,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   757                              <2> %%skip:
   758                                  .do1
   759 00000300 8D5210                  	lea	r3, [r3+16]	;tri += 2;
   760 00000303 0F6FB5[08000000]        	pmov	mm6, [PIC_EBP_REL(costab+8)]
   761 0000030A 8D0C76                  	lea	r2, [r4+r4*2]		;k3*fsize/2
   762 0000030D BF04000000              	mov	r5, 4		;i = 1*fsize
   763                                  
   764                                  	loopalign 16
   765                              <1>  loopalignK7 %1
   766                              <2> %%here:
   767                              <2>  times (1 & ge1(($$-%%here) & 15) & ~ge2(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) nop
   768                              <2>  times (1 & ge2(($$-%%here) & 15) & ~ge3(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Bh,0C0h
   769                              <2>  times (1 & ge3(($$-%%here) & 15) & ~ge4(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,004h,020h
   770                              <2>  times (1 & ge4(($$-%%here) & 15) & ~ge5(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,044h,020h,000h
   771                              <2>  times (1 & ge5(($$-%%here) & 15) & ~ge6(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,044h,020h,000h,090h
   772                              <2>  times (1 & ge6(($$-%%here) & 15) & ~ge7(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,080h,0,0,0,0
   773                              <2>  times (1 & ge7(($$-%%here) & 15) & ~ge8(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,004h,005h,0,0,0,0
   774                              <2>  times (1 & ge8(($$-%%here) & 15) & ~ge9(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,004h,005h,0,0,0,0,90h
   775                              <2>  times (1 & ge9(($$-%%here) & 15) & ~ge10(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,007h,90h,90h,90h,90h,90h,90h,90h
   776                              <2>  times (1 & ge10(($$-%%here) & 15) & ~ge11(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,008h,90h,90h,90h,90h,90h,90h,90h,90h
   777                              <2>  times (1 & ge11(($$-%%here) & 15) & ~ge12(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,009h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   778                              <2>  times (1 & ge12(($$-%%here) & 15) & ~ge13(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Ah,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   779                              <2>  times (1 & ge13(($$-%%here) & 15) & ~ge14(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Bh,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   780 00000312 EB0C90909090909090- <2>  times (1 & ge14(($$-%%here) & 15) & ~ge15(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Ch,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   781 0000031B 9090909090          <2>
   782                              <2>  times (1 & ge15(($$-%%here) & 15) & ~ge16(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Dh,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   783                              <2> %%skip:
   784                                  .do2:
   785 00000320 8D1C30                  	lea	r1, [r0+r4]		;gi = fi + kx
   786                                  ;f
   787 00000323 0F6F00                  	pmov	mm0, [r0]	; X  | fi0
   788 00000326 0F6F0CB0                	pmov	mm1, [r0+r4*4]	; X  | fi2
   789 0000032A 0F620470                	pupldq	mm0, [r0+r4*2]	;fi1 | fi0
   790 0000032E 0F620C48                	pupldq	mm1, [r0+r2*2]	;fi3 | fi2
   791 00000332 0F0FC08E                	pfpnacc	mm0, mm0	;fi0+fi1 | fi0-fi1 = f0|f1
   792 00000336 0F0FC98E                	pfpnacc	mm1, mm1	;fi2+fi3 | fi2-fi3 = f2|f3
   793                                  
   794 0000033A 0F6FD0                  	pmov	mm2, mm0
   795 0000033D 0F0FC19E                	pfadd	mm0, mm1	;f0+f2|f1+f3 = fi0 | fi1
   796 00000341 0F0FD19A                	pfsub	mm2, mm1	;f0-f2|f1-f3 = fi2 | fi3
   797                                  
   798 00000345 0F7E0470                	pmovd	[r0+r4*2], mm0	;fi[k1]
   799 00000349 0F7E1448                	pmovd	[r0+r2*2], mm2	;fi[k3]
   800                                  
   801 0000034D 0F6AC0                  	puphdq	mm0, mm0
   802 00000350 0F6AD2                  	puphdq	mm2, mm2
   803 00000353 0F7E00                  	pmovd	[r0], mm0	;fi[0]
   804 00000356 0F7E14B0                	pmovd	[r0+r4*4], mm2	;fi[k2]
   805                                  
   806 0000035A 8D04F0                  	lea	r0, [r0+r4*8]
   807                                  ;g
   808 0000035D 0F6F1B                  	pmov	mm3, [r1]	;    gi0
   809 00000360 0F6F244B                	pmov	mm4, [r1+r2*2]	;    gi3
   810 00000364 0F621C73                	pupldq	mm3, [r1+r4*2]	;gi1|gi0
   811 00000368 0F6224B3                	pupldq	mm4, [r1+r4*4]	;gi2|gi3
   812                                  
   813 0000036C 0F0FDB8E                	pfpnacc	mm3, mm3	;gi0+gi1  |gi0-gi1   = f0|f1
   814 00000370 0F0FE6B4                	pfmul	mm4, mm6	;gi2*SQRT2|gi3*SQRT2 = f2|f3
   815                                  
   816 00000374 0F6FEB                  	pmov	mm5, mm3
   817 00000377 0F0FDC9E                	pfadd	mm3, mm4	;f0+f2|f1+f3
   818 0000037B 0F0FEC9A                	pfsub	mm5, mm4	;f0-f2|f1-f3
   819                                  
   820 0000037F 3B442410                	cmp	r0, [esp + 16]
   821 00000383 0F7E1C73                	pmovd	[r1+r4*2], mm3	;gi[k1]
   822 00000387 0F7E2C4B                	pmovd	[r1+r2*2], mm5	;gi[k3]
   823 0000038B 0F6ADB                  	puphdq	mm3, mm3
   824 0000038E 0F6AED                  	puphdq	mm5, mm5
   825 00000391 0F7E1B                  	pmovd	[r1], mm3	;gi[0]
   826 00000394 0F7E2CB3                	pmovd	[r1+r4*4], mm5	;gi[k2]
   827                                  
   828 00000398 0F8282FFFFFF            	jb near .do2
   829                                  
   830 0000039E 0F6F343A                	pmov	mm6, [r3+r5]	; this is not aligned address!!
   831                                  
   832                                  	loopalign 16
   833                              <1>  loopalignK7 %1
   834                              <2> %%here:
   835                              <2>  times (1 & ge1(($$-%%here) & 15) & ~ge2(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) nop
   836                              <2>  times (1 & ge2(($$-%%here) & 15) & ~ge3(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Bh,0C0h
   837                              <2>  times (1 & ge3(($$-%%here) & 15) & ~ge4(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,004h,020h
   838                              <2>  times (1 & ge4(($$-%%here) & 15) & ~ge5(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,044h,020h,000h
   839                              <2>  times (1 & ge5(($$-%%here) & 15) & ~ge6(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,044h,020h,000h,090h
   840                              <2>  times (1 & ge6(($$-%%here) & 15) & ~ge7(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,080h,0,0,0,0
   841                              <2>  times (1 & ge7(($$-%%here) & 15) & ~ge8(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,004h,005h,0,0,0,0
   842                              <2>  times (1 & ge8(($$-%%here) & 15) & ~ge9(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,004h,005h,0,0,0,0,90h
   843                              <2>  times (1 & ge9(($$-%%here) & 15) & ~ge10(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,007h,90h,90h,90h,90h,90h,90h,90h
   844                              <2>  times (1 & ge10(($$-%%here) & 15) & ~ge11(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,008h,90h,90h,90h,90h,90h,90h,90h,90h
   845                              <2>  times (1 & ge11(($$-%%here) & 15) & ~ge12(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,009h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   846                              <2>  times (1 & ge12(($$-%%here) & 15) & ~ge13(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Ah,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   847                              <2>  times (1 & ge13(($$-%%here) & 15) & ~ge14(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Bh,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   848 000003A2 EB0C90909090909090- <2>  times (1 & ge14(($$-%%here) & 15) & ~ge15(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Ch,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   849 000003AB 9090909090          <2>
   850                              <2>  times (1 & ge15(($$-%%here) & 15) & ~ge16(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Dh,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   851                              <2> %%skip:
   852                                  .for:
   853                                  ;
   854                                  ; mm6 = c1 | s1
   855                                  ; mm7 = 0x800000000 | 0
   856                                  ;
   857 000003B0 0F6FEE                  	pmov	mm5, mm6
   858 000003B3 8B442428                	mov	r0, [esp+40]	; fz
   859 000003B7 0F6AED                  	puphdq	mm5, mm5	; c1 | c1
   860 000003BA 8D1C70                  	lea	r1, [r0+r4*2]
   861 000003BD 0F0FED9E                	pfadd	mm5, mm5	; c1+c1 | c1+c1
   862 000003C1 0F0FEEB4                	pfmul	mm5, mm6	; 2*c1*c1 | 2*c1*s1
   863 000003C5 0F0FAD[50000000]9A      	pfsub	mm5, [PIC_EBP_REL(D_1_0_0_0)] ; 2*c1*c1-1.0 | 2*c1*s1 = -c2 | s2
   864                                  
   865 000003CD 0F0FE5BB                	pswapd	mm4, mm5	; s2 |-c2
   866 000003D1 0FEFE7                  	pxor	mm4, mm7	; s2 | c2
   867 000003D4 0FEFFE                  	pxor	mm7, mm6	; c1 |-s1
   868 000003D7 0F0FF6BB                	pswapd	mm6, mm6	; s1 | c1
   869                                  
   870                                  ; mm4 =  s2| c2
   871                                  ; mm5 = -c2| s2
   872                                  ; mm6 =  c1| s1
   873                                  ; mm7 =  s1|-c1 (we use the opposite sign. from GOGO here)
   874                                  
   875 000003DB 0F7F2424                	pmov	[esp], mm4
   876 000003DF 0F7F6C2408              	pmov	[esp+8], mm5
   877                                  
   878 000003E4 29FB                    	sub	r1, r5		;r1 = gi
   879 000003E6 01F8                    	add	r0, r5		;r0 = fi
   880                                  
   881                                  	loopalign 16
   882                              <1>  loopalignK7 %1
   883                              <2> %%here:
   884                              <2>  times (1 & ge1(($$-%%here) & 15) & ~ge2(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) nop
   885                              <2>  times (1 & ge2(($$-%%here) & 15) & ~ge3(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Bh,0C0h
   886                              <2>  times (1 & ge3(($$-%%here) & 15) & ~ge4(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,004h,020h
   887                              <2>  times (1 & ge4(($$-%%here) & 15) & ~ge5(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,044h,020h,000h
   888                              <2>  times (1 & ge5(($$-%%here) & 15) & ~ge6(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,044h,020h,000h,090h
   889                              <2>  times (1 & ge6(($$-%%here) & 15) & ~ge7(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,080h,0,0,0,0
   890                              <2>  times (1 & ge7(($$-%%here) & 15) & ~ge8(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,004h,005h,0,0,0,0
   891 000003E8 8D04050000000090    <2>  times (1 & ge8(($$-%%here) & 15) & ~ge9(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 08Dh,004h,005h,0,0,0,0,90h
   892                              <2>  times (1 & ge9(($$-%%here) & 15) & ~ge10(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,007h,90h,90h,90h,90h,90h,90h,90h
   893                              <2>  times (1 & ge10(($$-%%here) & 15) & ~ge11(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,008h,90h,90h,90h,90h,90h,90h,90h,90h
   894                              <2>  times (1 & ge11(($$-%%here) & 15) & ~ge12(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,009h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   895                              <2>  times (1 & ge12(($$-%%here) & 15) & ~ge13(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Ah,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   896                              <2>  times (1 & ge13(($$-%%here) & 15) & ~ge14(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Bh,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   897                              <2>  times (1 & ge14(($$-%%here) & 15) & ~ge15(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Ch,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   898                              <2>  times (1 & ge15(($$-%%here) & 15) & ~ge16(($$-%%here) & 15) & ~ge%1(($$-%%here) & 15)) DB 0EBh,00Dh,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h,90h
   899                              <2> %%skip:
   900                                  .do3:
   901 000003F0 0F6F0448                	pmov	mm0, [r0+r2*2] ; fi[k1]
   902 000003F4 0F6F144B                	pmov	mm2, [r1+r2*2] ; gi[k1]
   903 000003F8 0F6F0C70                	pmov	mm1, [r0+r4*2] ; fi[k3]
   904 000003FC 0F6F1C73                	pmov	mm3, [r1+r4*2] ; gi[k3]
   905                                  
   906 00000400 0F62C0                  	pupldq	mm0, mm0
   907 00000403 0F62D2                  	pupldq	mm2, mm2
   908 00000406 0F62C9                  	pupldq	mm1, mm1
   909 00000409 0F62DB                  	pupldq	mm3, mm3
   910                                  
   911 0000040C 0F0FC4B4                	pfmul	mm0, mm4
   912 00000410 0F0FD5B4                	pfmul	mm2, mm5
   913 00000414 0F0FCCB4                	pfmul	mm1, mm4
   914 00000418 0F0FDDB4                	pfmul	mm3, mm5
   915                                  
   916 0000041C 0F0FC29E                	pfadd	mm0, mm2		;d | c
   917 00000420 0F0FCB9E                	pfadd	mm1, mm3		;b | a
   918                                  
   919 00000424 0F6F14B0                	pmov	mm2, [r0+r4*4]		;fi2
   920 00000428 0F621CB3                	pupldq	mm3, [r1+r4*4]		;gi2 | -
   921 0000042C 0F6F20                  	pmov	mm4, [r0]		;fi0
   922 0000042F 0F622B                  	pupldq	mm5, [r1]		;gi0 | -
   923                                  
   924 00000432 0F62D0                  	pupldq	mm2, mm0		;c | fi2
   925 00000435 0F6AD8                  	puphdq	mm3, mm0		;d | gi2
   926 00000438 0F62E1                  	pupldq	mm4, mm1		;a | fi0
   927 0000043B 0F6AE9                  	puphdq	mm5, mm1		;b | gi0
   928                                  
   929 0000043E 0F0FD28E                	pfpnacc	mm2, mm2		;f2 | f3
   930 00000442 0F0FDB8E                	pfpnacc	mm3, mm3		;g2 | g3
   931 00000446 0F0FE48E                	pfpnacc	mm4, mm4		;f0 | f1
   932 0000044A 0F0FED8E                	pfpnacc	mm5, mm5		;g0 | g1
   933                                  
   934 0000044E 0F6FC2                  	pmov	mm0, mm2
   935 00000451 0F6FCB                  	pmov	mm1, mm3
   936 00000454 0F62D2                  	pupldq	mm2, mm2		;f3 | f3
   937 00000457 0F62DB                  	pupldq	mm3, mm3		;g3 | g3
   938 0000045A 0F6AC0                  	puphdq	mm0, mm0		;f2 | f2
   939 0000045D 0F6AC9                  	puphdq	mm1, mm1		;g2 | g2
   940                                  
   941 00000460 0F0FE4BB                	pswapd	mm4, mm4		;f1 | f0
   942 00000464 0F0FEDBB                	pswapd	mm5, mm5		;g1 | g0
   943                                  
   944 00000468 0F0FC7B4                	pfmul	mm0, mm7		;f2 * s1 | f2 *-c1
   945 0000046C 0F0FDEB4                	pfmul	mm3, mm6		;g3 * c1 | g3 * s1
   946 00000470 0F0FCEB4                	pfmul	mm1, mm6		;g2 * c1 | g2 * s1
   947 00000474 0F0FD7B4                	pfmul	mm2, mm7		;f3 * s1 | f3 *-c1
   948                                  
   949 00000478 0F0FC39A                	pfsub	mm0, mm3		; b |-a
   950 0000047C 0F0FCA9A                	pfsub	mm1, mm2		; d | c
   951                                  
   952 00000480 0F6FD5                  	pmov	mm2, mm5
   953 00000483 0F6FDC                  	pmov	mm3, mm4
   954 00000486 0F62E0                  	pupldq	mm4, mm0		;-a | f0
   955 00000489 0F62E9                  	pupldq	mm5, mm1		; c | g0
   956 0000048C 0F6AD0                  	puphdq	mm2, mm0		; b | g1
   957 0000048F 0F6AD9                  	puphdq	mm3, mm1		; d | f1
   958                                  
   959 00000492 0F0FE48E                	pfpnacc	mm4, mm4		;fi2 | fi0
   960 00000496 0F0FED8E                	pfpnacc	mm5, mm5		;gi0 | gi2
   961 0000049A 0F0FD28E                	pfpnacc	mm2, mm2		;gi1 | gi3
   962 0000049E 0F0FDB8E                	pfpnacc	mm3, mm3		;fi1 | fi3
   963                                  
   964 000004A2 0F7E20                  	pmovd	[r0], mm4		;fi[0]
   965 000004A5 0F7E2CB3                	pmovd	[r1+r4*4], mm5		;gi[k2]
   966 000004A9 0F7E144B                	pmovd	[r1+r2*2], mm2		;gi[k3]
   967 000004AD 0F7E1C48                	pmovd	[r0+r2*2], mm3		;fi[k3]
   968                                  
   969 000004B1 0F6AE4                  	puphdq	mm4, mm4
   970 000004B4 0F6AED                  	puphdq	mm5, mm5
   971 000004B7 0F6AD2                  	puphdq	mm2, mm2
   972 000004BA 0F6ADB                  	puphdq	mm3, mm3
   973 000004BD 0F7E24B0                	pmovd	[r0+r4*4], mm4		;fi[k2]
   974 000004C1 0F7E2B                  	pmovd	[r1], mm5		;gi[0]
   975 000004C4 0F7E1473                	pmovd	[r1+r4*2], mm2		;gi[k1]
   976 000004C8 0F7E1C70                	pmovd	[r0+r4*2], mm3		;fi[k1]
   977                                  
   978 000004CC 8D04F0                  	lea	r0, [r0+r4*8]
   979 000004CF 8D1CF3                  	lea	r1, [r1+r4*8]
   980 000004D2 3B442410                	cmp	r0, [esp + 16]
   981 000004D6 0F6F2424                	pmov	mm4, [esp]
   982 000004DA 0F6F6C2408              	pmov	mm5, [esp+8]
   983                                  
   984 000004DF 0F820BFFFFFF            	jb near	.do3
   985                                  
   986 000004E5 81C704000000            	add	r5, 4
   987                                  ; mm6 =  c1| s1
   988                                  ; mm7 =  s1|-c1 (we use the opposite sign. from GOGO here)
   989 000004EB 0F0F32B4                	pfmul	mm6, [r3]	; c1*a | s1*a
   990 000004EF 0F0F7A08B4              	pfmul	mm7, [r3+8]	; s1*b |-c1*b
   991 000004F4 39F7                    	cmp	r5, r4
   992                                  
   993 000004F6 0F0FF79A                	pfsub	mm6, mm7	; c1*a-s1*b | s1*a+c1*b
   994 000004FA 0F0FF6BB                	pswapd	mm6, mm6 ; ???	; s1*a+c1*b | c1*a-s1*b
   995 000004FE 0F6FBD[00000000]        	pmov	mm7, [PIC_EBP_REL(costab)]
   996 00000505 0F82A5FEFFFF            	jb near	.for
   997                                  
   998 0000050B 8B442428                	mov	r0, [esp+40]	;fi
   999 0000050F 3B74242C                	cmp	r4, [esp+40+4]
  1000 00000513 8D34B500000000          	lea	r4, [r4*4]	;kx *= 4
  1001                                  
  1002 0000051A 0F82E0FDFFFF            	jb near	.do1
  1003                                  .exitttt
  1004 00000520 0F0E                    	femms
  1005 00000522 81C414000000            	add	esp,20
  1006                                  	popd	ebp, ebx, esi, edi
  1007                              <1>  %rep %0
  1008                              <1>  %rotate -1
  1009                              <1>  pop %1
  1010                              <1>  %assign %$STACK %$STACK-4
  1011                              <1>  %endrep
  1012                              <2>  %rotate -1
  1013 00000528 5F                  <2>  pop %1
  1014                              <2>  %assign %$STACK %$STACK-4
  1015                              <2>  %rotate -1
  1016 00000529 5E                  <2>  pop %1
  1017                              <2>  %assign %$STACK %$STACK-4
  1018                              <2>  %rotate -1
  1019 0000052A 5B                  <2>  pop %1
  1020                              <2>  %assign %$STACK %$STACK-4
  1021                              <2>  %rotate -1
  1022 0000052B 5D                  <2>  pop %1
  1023                              <2>  %assign %$STACK %$STACK-4
  1024                                  endproc
  1025                              <1>  %ifnctx proc
  1026                              <1>  %error expected 'proc' before 'endproc'.
  1027                              <1>  %else
  1028                              <1>  %if %$STACK > 0
  1029                              <1>  add esp, %$STACK
  1030                              <1>  %endif
  1031                              <1> 
  1032                              <1>  %if %$STACK <> (-%$STACKN)
  1033                              <1>  %error STACKLEVEL mismatch check 'local', 'alloc', 'pushd', 'popd'
  1034                              <1>  %endif
  1035                              <1> 
  1036 0000052C C3                  <1>  ret
  1037                              <1>  %pop
  1038                              <1>  %endif
