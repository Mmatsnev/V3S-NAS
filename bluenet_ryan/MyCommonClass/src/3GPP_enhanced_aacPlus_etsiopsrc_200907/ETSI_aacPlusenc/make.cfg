#
# Makefile configuration for enhAacPlusEnc
#
UNAME = $(shell uname -s)

# set up some paths
SRCPATH = ./src
LDFLAGS =
CFLAGS = 
MK_DIR := mkdir -p
######## Compiler definition #############
CC=gcc
CXX=g++
AR=ar
ARFLAGS= -rcu
CFLAGS += -Wall -W -Wstrict-prototypes -Wmissing-prototypes
CC_DEP=g++
CC_DEPEND  = gcc -w -c -MM
CXX_DEPEND = gcc -w -c -MM

ifeq "$(INSURE)" "1"
CC=insure
CXX=insure
endif

### filename extension
lib=a
obj=o

################ SOLARIS ##################
ifeq "$(UNAME)" "SunOS"
# insert machine specific compiler switches here
# e.g. override CFLAGS  += -fPIC
# e.g override LDFLAGS += -L../fftwlib/sol
endif
##############  END SOLARIS  #############


##################  LINUX  ###############
ifeq "$(UNAME)" "Linux"
# insert machine specific compiler switches here
endif
############  END LINUX  ################


################ IRIX64 ##################
ifeq "$(UNAME)" "IRIX64"
# insert machine specific compiler switches here
endif
###############  END IRIX64  #############


####################  SET PATHES  ##########################
LIBPATH = ./lib/$(UNAME)

ifeq "$(WMOPS)" "1"
override CFLAGS += -DWMOPS
endif

ifeq "$(DEBUG)" "1"
override CFLAGS += -g
override LIBPATH := $(LIBPATH)_D
endif

ifneq "$(OPTIM)" ""
override CFLAGS += -O$(OPTIM) -fno-strength-reduce
override LIBPATH := $(LIBPATH)_O$(OPTIM)
endif

ifeq "$(INSURE)" "1"
override LIBPATH := $(LIBPATH)_I
endif

override DEBUGCFLAGS := $(CFLAGS)

ifeq "$(PROF)" "1"
override CFLAGS += -pg
override LDFLAGS += -pg 
override LIBPATH := $(LIBPATH)_P
endif

ifeq "$(DEBUG)" "1"
override CFLAGS += -DDEBUG
else
override CFLAGS += -DNDEBUG
endif

ifeq "$(ATDS)" "1"
override CFLAGS+= -DADTS
endif

ifeq "$(TRANSPORT)" "ADTS"
override CFLAGS+= -DADTS
endif

#################
# code optimization levels:
#override CFLAGS +=
#################

OBJDIR = $(LIBPATH)/obj


###############################################################################
# here are the rules

$(OBJDIR)/%.$(obj):	$(SRCPATH)/%.asm
	$(CC) -c $(CFLAGS) $(INCDIR) -o $@ $<

$(OBJDIR)/%.$(obj):	$(SRCPATH)/%.c
	$(CC) -c $(CFLAGS) $(INCDIR) -o $@ $<

# generate dependencies
$(OBJDIR)/%.d:	$(SRCPATH)/%.c
	$(CC_DEPEND) -MM $(CFLAGS) $(INCDIR) $< | sed 's§$(basename $(notdir $<))\.$(obj)§$(OBJDIR)/$*.$(obj) $(OBJDIR)/$*.d§g' > $@

